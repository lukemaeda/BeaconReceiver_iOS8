よく利用される用語

Beacon
電子情報を受信して現在情報を知る電子機器のことをいうらしい
http://e-words.jp/w/E38393E383BCE382B3E383B3.html

BLE
2.4GHz の無線を使った近距離無線通信規格
少ない電池でもいままでよりも長くバッテリーが持つようにつくられている

ペリフェラル(ビーコン)
アドバタイズ(発信、公開)を行っているデバイスをペリフェラル という。

Advertise(アドバタイズ)
アドバタイズ：ある機器が別の機器に管理情報を伝達すること
アドバタイズ(発信、公開)

セントラル
情報を受取るセントラル(デバイス)
情報の取得などを行うデバイスのことを セントラル

proximity UUID（企業）
major（建物）
minor（フロア）

リージョン監視
領域の入出チェック（虜域観測）

リージョン=UUID
出るイベントはドキュメント情報は２０秒っぽいが実際は３０秒かかるっぽい

Ranging
エリア内のBeaconの情報を取得（距離推定）

Beacon距離
proximity
距離判定は４つとれる
相対的に変わる

accuracy
位置情報取得の精度を指定
もちろん精度が良いほど正確だが電池の量も多い
領域はだいたいのもの

rssi
Received Signal Strength Indication
無線通信機器が受信する信号の強度を測定するための回路または信号

電波法！！！！
技適マークがついていない無線機は電波法違反らしい
estimoteのビーコン端末は日本実運用すると電波法違反になるぽいですね

iOS勉強会 iBeaconでできること　に参加してきた
http://nakajijapan.github.io/blog/2013/12/12/study-ibeacon/



_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


https://www.penflip.com/mosco/reserch/blob/master/ibeacon.txt

特徴

iBeacon は、地理的領域観測では難しかった非常に狭い領域への出入りを比較的高い精度で検出する事が出来る。
iBeacon の機能は CoreLocation.framework の領域観測サービスの一部として実装する。

用語

Bluetooth のデバイスは、自分の存在を他のデバイスに知らせるために自デバイスや対応サービスの情報を公開する仕組みがあり、これを アドバタイズと言う。
アドバタイズを行っているデバイスをペリフェラル という。
ペリフェラルを検索して情報の取得などを行うデバイスのことを セントラル と呼ぶ。
アプリ側ではCoreLocation.framework の API 経由で Beacon (アドバタイズを行うデバイス) がアドバタイズしている情報にアクセスする。
BLE(Bluetooth Low Energy) という通信技術を利用している。
Beaconがアドバタイズしているもの

proximity UUID

必須
組織などの単位の識別

major

任意
Beacon同士のグルーピングに使用する。
ショッピングモールなどの単位でグルーピング

minor

任意
Beacon同士のグルーピングに使用する。
店舗ごとでのグルーピング。店舗識別など。
　対応端末

iOS 7 がインストールされている
* iPhone 4s 以降の iPhone
* 第3世代 iPad 以降の iPad・iPad mini
* 第5世代 iPod touch

距離感

CLProximityImmediate が 50cm 以内
CLProximityNear が 数m 以内
CLProximityFar が壁を１枚隔てて 15m 以内 といった感じ

注意

Beacon による領域観測の場合、領域観測サービス開始時に既に Beacon が検出できる距離にあると、locationManager:didEnterRegion: メソッドが呼び出されません。
この場合でも、Beacon が検出できない距離まで遠ざかれば locationManager:didExitRegion: メソッドは呼び出されます。
あくまで観測領域の境界をまたいだ際にしかイベントが発生しないようですので注意が必要です。

つまりセントラル起動時に既にペリフェラルが起動してると、検知できない。

自分でもテストしましたが、そうなってました。

参考URL
http://dev.classmethod.jp/references/ios7-ibeacon-api/
[iOS 7] 新たな領域観測サービス iBeacon を使ってみる


_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


サービス・キャラクタリスティックは、UUID で識別されます。
UUID は 32 桁ですが、Bluetooth SIG の標準で定義されているものについては 4 桁で表現されます。
4 桁の UUID は実際には Bluetooth Base UUID というものをつけ、
0000●●●●-0000-1000-8000-00805f9b34fb となります(●のところに4桁 UUID が入ります)。
規格外で独自に定義する場合は Mac では uuidgen コマンドを使うなどして生成します。

また、Android では各メーカーが独自に BLE 対応のライブラリを出していましたが、
Android 4.3 で標準 API として搭載され、アプリから使えるようになっています。

Windows 8 では、キーボード・マウスなど、OS 標準機能では使用できていましたが、
アプリからは HTML5 ベースの Windows ストアアプリで限定的にしか使えませんでした。
Windows 8.1 からはきちんと WinRT のクラスライブラリで対応され、
XAML+C# のアプリでも使用できるようになっています。

【連載】Bluetooth LE (1) Bluetooth Low Energy の基礎
http://blog.fenrir-inc.com/jp/2013/09/bluetooth-le-firststep.html


_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


受信アプリがバックグラウンドの場合

受信アプリがバックグラウンドの場合、CoreBluetoothを使う、Rangeは、バックグラウンドでは使用できないため使用できません。
しかし、CoreLocationを使うRegionはバックグラウンドで使用できます。
つまり、エリアに入った、エリアから出た、はわかるということです。
もともとiOS6時代はCoreLocationも、バックグラウンドにいるアプリでは頻繁に通信できないという制約がありましたが、
iOS7でiBeaconが導入されたからか、それが緩和されています。
バックグラウンドでも、1秒間隔で受信することが可能です。
Regionを元に、PushやPassbookと連携した機能を起動することができます。しかし、処理に約10秒のラグが存在します。

iBeaconの送受信制限について
http://qiita.com/Morikuma_Works/items/97c222fce40d8f643e71


_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


